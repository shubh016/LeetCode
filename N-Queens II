class Solution {
public:
    bool safe(vector<vector<int>> &v,int row,int col,int n){
        for(int i=row-1,j=col;i>=0;i--){
            if(v[i][j]==1)
                return false;
        }
        for(int i=row-1,j=col-1;i>=0 && j>=0;i--,j--){
            if(v[i][j]==1)
                return false;
        }
        for(int i=row-1,j=col+1;i>=0 && j<n;i--,j++){
            if(v[i][j]==1)
                return false;
        }
        return true;
    }
    
    void queens(int &ways,int n,vector<vector<int>>&v,int row){
        if(row==n){
            ways++;
            return;
        }
        for(int col=0;col<n;col++){
            if(safe(v,row,col,n)){
                v[row][col]=1;
                queens(ways,n,v,row+1);
                v[row][col]=0;
            }
        }
    }
    
    int totalNQueens(int n) {
        int ways=0;
        vector<vector<int>> v(n,vector<int>(n,0));
        queens(ways,n,v,0);
        return ways;
    }
};
