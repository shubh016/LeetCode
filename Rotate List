/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    int length(ListNode* start){
        int len=0;
        while(start){
            len++;
            start=start->next;
        }
        return len;
    }
    
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head || k==0){
            return head;
        }
        int len=length(head);
        k%=len;
        ListNode* temp=NULL;
        ListNode* start=head;
        ListNode* t1=NULL;
        int x=(len-k)-1;
        while(x>0){
            start=start->next;
            x--;
        }
        if(start->next){
            temp=start->next;
            start->next=NULL;
            t1=temp;   
        }
        while(t1 && t1->next){
            t1=t1->next;
        }
        if(t1)
            t1->next=head;
        if(temp)
            return temp;
        else
            return head;
    }
};
