class Solution {
public:
    bool binarysearch(int row,int col,vector<vector<int>>& v,int n,int target){
        int low=col;
        int high=n-1;
        int mid=low+(high-low)/2;
        while(low<=high){
            mid=low+(high-low)/2;
            if(v[row][mid]==target){
                return true;
            }
            if(v[row][mid]<target){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return false;
    }
    
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row=matrix.size();
        int col=matrix[0].size();
        if(matrix[0][0]>target || matrix[row-1][col-1]<target){
            return false;
        }
        if(matrix[0][0]==target || matrix[row-1][col-1]==target){
            return true;
        }
        for(int i=0;i<col;i++){
            if(matrix[row-1][i]==target){
                return true;
            }
            if(matrix[row-1][i]>target){
                for(int j=0;j<row;j++){
                    if(binarysearch(j,i,matrix,col,target)){
                        return true;
                    } 
                }
                break;
            }
        }
        return false;
    }
};
