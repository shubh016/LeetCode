/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void check(TreeNode* root,int &sum,vector<vector<int>> &v,vector<int> &v1){
        if(!root)
            return;
        v1.push_back(root->val);
        sum-=root->val;
        if(sum==0 && !root->left && !root->right)
            v.push_back(v1);
        check(root->left,sum,v,v1);
        check(root->right,sum,v,v1);
        sum+=root->val;
        v1.pop_back();
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> v;
        vector<int> v1;
        check(root,sum,v,v1);
        return v;
    }
};
