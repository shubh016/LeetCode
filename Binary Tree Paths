/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void move(vector<string> &v,vector<int> &v1){
        string str="";
        for(int i=0;i<v1.size();i++){
            str=str+to_string(v1[i]);
            if(i<v1.size()-1)
                str+="->";
        }
        v.push_back(str);
    }
    
    void paths(vector<string> &v,vector<int> &v1, TreeNode* root){
        if(!root)
            return;
        v1.push_back(root->val);
        if(!root->left && !root->right){
            move(v,v1);
        }
        paths(v,v1,root->left);
        paths(v,v1,root->right);
        v1.pop_back();
    }
    
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> v;
        if(!root)
            return v;
        vector<int> v1;
        paths(v,v1,root);
        return v;
    }
};
