/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head)
            return head;
        ListNode* newnode=new ListNode(0);
        ListNode* temp=newnode;
        ListNode* start=head;
        bool flag=false;
        while(start)
        {
            if(start->next && start->val == start->next->val)
                flag=true;
            else if(start->next && start->val != start->next->val)
            {
                if(flag)
                    flag=false;
                else
                {
                    temp->next=new ListNode(start->val);
                    temp=temp->next;
                }
            }
            if(start->next==NULL && !flag)
                temp->next=new ListNode(start->val);
            start=start->next;
        }
        return newnode->next;
    }
};
