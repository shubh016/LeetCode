class Solution {
public:
    void find(vector<vector<char>> &boards,string word,int len,bool &found,int i,int j,int n,int m, vector<vector<bool>> &visited){
        if(found || i<0 || i>=m || j<0 || j>=n || len<word.size() && boards[i][j]!=word[len] || visited[i][j])
            return;
        visited[i][j]=true;
        if(len>=word.size()-1)
            found=true;
        find(boards,word,len+1,found,i+1,j,n,m,visited);
        find(boards,word,len+1,found,i,j+1,n,m,visited);
        find(boards,word,len+1,found,i,j-1,n,m,visited);
        find(boards,word,len+1,found,i-1,j,n,m,visited);
        visited[i][j]=false;
    }
    
    bool exist(vector<vector<char>>& board, string word) {
        int m=board.size(),n=board[0].size();
        vector<vector<bool>>visit(m,vector<bool>(n,false));
        bool found=false;
        int len=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]==word[len]){
                    find(board,word,len,found,i,j,n,m,visit);
                    if(found)
                        return found;
                }
            }
        }
        return found;
    }
};
