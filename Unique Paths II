class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m=obstacleGrid.size(),n=obstacleGrid[0].size();
        vector<vector<int>> v(m,vector<int>(n,INT_MAX));
        for(int i=0;i<n;i++){
            if(obstacleGrid[0][i]==1)
                break;
            v[0][i]=1;
        }
        for(int i=0;i<m;i++){
            if(obstacleGrid[i][0]==1)
                break;
            v[i][0]=1;
        }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                if(v[i-1][j]==INT_MAX && v[i][j-1]==INT_MAX || obstacleGrid[i][j]==1)
                    continue;
                else if(v[i-1][j]==INT_MAX)
                    v[i][j]=v[i][j-1];
                else if(v[i][j-1]==INT_MAX)
                    v[i][j]=v[i-1][j];
                else
                    v[i][j]=v[i-1][j]+v[i][j-1];
            }
        }
        return v[m-1][n-1]==INT_MAX ? 0 : v[m-1][n-1];
    }
};
