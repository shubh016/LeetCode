class NumMatrix {
public:
    vector<vector<int>> v;
    NumMatrix(vector<vector<int>>& matrix) {
        if(matrix.size()==0 || matrix[0].size()==0) 
            return;
        v.clear();
        v=matrix;
        for(int i=1;i<matrix[0].size();i++){
            v[0][i]+=v[0][i-1];
        }
        for(int i=1;i<matrix.size();i++){
            v[i][0]+=v[i-1][0];
        }
        for(int i=1;i<matrix.size();i++){
           for(int j=1;j<matrix[0].size();j++){
                v[i][j]+=(v[i-1][j]+v[i][j-1])-v[i-1][j-1];
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        if(row1==0 && col1==0)
            return v[row2][col2];
        else if(row1==0){
            return v[row2][col2]-v[row2][col1-1];
        }
        else if(col1==0){
            return v[row2][col2]-v[row1-1][col2];
        }
        else if(row1>0 && col1>0){
            return (v[row2][col2]-v[row1-1][col2]-v[row2][col1-1])+v[row1-1][col1-1];
        }
        else
            return 0;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
