class Solution {
public:
    void dfs(vector<vector<char>> &v,int i,int j,int m,int n){
        if(i<0 || i>=n || j<0 || j>=m || v[i][j]!='1'){
            return;
        }
        v[i][j]='2';
        dfs(v,i,j+1,m,n);
        dfs(v,i+1,j,m,n);
        dfs(v,i,j-1,m,n);
        dfs(v,i-1,j,m,n);
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int islandCount=0;
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    dfs(grid,i,j,m,n);
                    islandCount++;
                }
            }
        }
        return islandCount;
    }
};
