class Solution {
public:
    int ladderLength(string beginWord, string endword, vector<string>& wordList) {
        set<string> s;
        bool found=false;
        for(int i=0;i<wordList.size();i++){
            if(wordList[i].compare(endword)==0)
                found=true;
            s.insert(wordList[i]);
        }
        if(!found)
            return 0;
        int ans=0;
        queue<pair<string,int>> q;
        q.push({beginWord,0});
        while(!q.empty()){
            string str=q.front().first;
            int len=q.front().second;
            q.pop();
            if(str==endword){
                ans=len+1;
                break;
            }
            string st=str;
            for(int i=0;i<str.size();i++){
                str=st;
                for(int j=0;j<26;j++){
                    str[i]=j+'a';
                    if(str.compare(st)==0)
                        continue;
                    if(s.find(str)!=s.end()){
                        q.push({str,len+1});
                        s.erase(str);
                    }
                }
            }
        }
        return ans;
    }
};
