class Solution {
public: 
    bool issafe(vector<string> temp,int row,int col,int n){
        for(int i=row-1,j=col;i>=0;i--){
            if(temp[i][col]=='Q')
                return false;
        }
        for(int i=row-1,j=col-1;i>=0 && j>=0;i--,j--){
            if(temp[i][j]=='Q')
                return false;
        }
        for(int i=row-1,j=col+1;i>=0 && j<n;i--,j++){
            if(temp[i][j]=='Q')
                return false;
        }
        return true;
    }
    
    void queens(int n,int q,vector<vector<string>> &v,vector<string> &temp,int row){
        if(row==n){
            v.push_back(temp);
            return;
        }
        for(int col=0;col<n;col++){
            if(issafe(temp,row,col,n)){
                temp[row][col]='Q';
                queens(n,q-1,v,temp,row+1);
                temp[row][col]='.';
            }
        }
    }
    
    vector<vector<string>> solveNQueens(int n) {
        vector<vector<string>> v;
        vector<string> temp(n,string(n,'.'));
        queens(n,n,v,temp,0);
        return v;
    }
};
